///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////// [NOTES] /////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
    These are all utility functions that should help you save time when writing code.
    These will all have a range of use cases, and will not depend on eachother unless specified.
    These functions will not require any external variables to be defined. The only variables that you'll need will be passed in when calling the function.
*/

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////// [VARIABLE DEFINITIONS] /////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// You do not need to define any object variables for these functions. These should be stored in a script instance.

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////// [CODE] /////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////
///// [[RELATIVE TO GLOBAL POSITION]] /////
///////////////////////////////////////////

// This function will convert a point from local space to global space. For example, if you wanted to get the global position of an object that is attached to another object, you would use this function.
// It will return a table with the global x and y position of the object. You can access them using table indexing syntax, for example:
/*
    var result = RelativeToGlobalPosition(x,y,objPlayer.x,objPlayer.y,objPlayer.image_angle);
    var globalX = result[0];
    var globalY = result[1];
*/
// The first two parameters are the relative x and y position of the object. The next two parameters are the parent object's x and y position. The last parameter is the parent object's image_angle (or whatever other angle you use).
function RelativeToGlobalPosition(relX,relY,parX,parY,angle){
	var relDist = point_distance(parX,parY,parX-relX,parY-relY);
	var relDir = point_direction(parX,parY,parX-relX,parY-relY);
	var globalX = parX + lengthdir_x(relDist, angle+relDir);
	var globalY = parY + lengthdir_y(relDist, angle+relDir);
	
	return [globalX,globalY];
}



///////////////////////////////////////////

///////////////////////////////////////////
